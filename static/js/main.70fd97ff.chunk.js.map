{"version":3,"sources":["components/Burger/Burgeringredient/Burgeringredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/Navigationitems/Navigationitem/Navigationitem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","hoc/Layout/Layout.module.css","assets/images/original.png","components/Logo/Logo.module.css","components/Navigation/Navigationitems/Navigationitems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","containers/ContactData/ContactData.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","components/Order/Order.module.css","containers/Auth/Auth.module.css","hoc/Auxilary/Auxilary.js","components/Logo/Logo.js","components/Navigation/Navigationitems/Navigationitem/Navigationitem.js","components/Navigation/Navigationitems/Navigationitems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/Burgeringredient/Burgeringredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","axios-orders.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","store/actions/auth.js","store/actions/actionTypes.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/order.js","components/UI/Input/Input.js","containers/ContactData/ContactData.js","components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["module","exports","auxilary","props","children","logo","className","classes","Logo","style","height","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","NavigationItems","isAuthenticated","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","isAuth","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","Auxilary","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","React","Component","connect","auth","token","Burgeringredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","Burger","transformedIngredients","Object","keys","ingredients","map","igkey","Array","_","i","key","reduce","arr","el","concat","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","Modal","nextProps","nextState","modalClosed","transform","opacity","button","Button","btnType","orderSummary","ingredientsSummary","textTransform","purchaseCancelled","purchaseContinued","instance","axios","create","baseURL","spinner","Loader","withErrorHandler","WrappedComponent","error","errorConfirmedHandler","treqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","reqInterceptor","message","authSuccess","userId","Idtoken","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","setAuthRedirectPath","path","BurgerBuilder","purchasing","purchaseHandler","onSetAuthRedirectPath","history","push","purchaseCancleHandler","purchaseContinueHandler","onInitPurchased","onInitIngredients","sum","disabledInfo","ings","burger","Spinner","oningredientAdd","oningredientRemove","updatePurchaseState","OrderSummary","burgerBuilder","totalPrice","ingName","ingredientName","get","then","data","catch","actions","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","name","placeholder","validation","required","valid","village","street","zipcode","minLength","maxLength","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","onOrderBurger","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","length","formElementArray","id","config","form","onSubmit","formElement","vali","loading","post","orderId","purchaseBurgerSuccess","purchaseBurgerFail","checkoutSummary","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","onInitPurchase","summary","purchasedRedirect","purchased","match","component","amount","ingredientOutput","ig","display","border","padding","Order","Number","parseFloat","Orders","onFetchOrders","orders","queryParams","fetchedOrders","err","Auth","isEmail","password","isSignup","controlName","updatedControls","submitHandler","onAuth","switchAuthModeHandler","buildingBurger","authRedirectPath","errorMessage","authRedirect","building","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","Logout","onLogout","App","onTryAutoSignup","rotues","withRouter","getItem","Boolean","window","location","hostname","initialState","INGREDIENT_PRICES","salad","cheese","bacon","meat","reducer","action","erroe","newOrder","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.70fd97ff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"Burgeringredient_BreadBottom__2ZrSt\",\"BreadTop\":\"Burgeringredient_BreadTop__3iuqK\",\"Seeds1\":\"Burgeringredient_Seeds1__2Sgvp\",\"Seeds2\":\"Burgeringredient_Seeds2__15cWp\",\"Meat\":\"Burgeringredient_Meat__3lsN7\",\"Cheese\":\"Burgeringredient_Cheese__2oRO0\",\"Salad\":\"Burgeringredient_Salad__2990j\",\"Bacon\":\"Burgeringredient_Bacon__3t6p5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__1mJBn\",\"Open\":\"SideDrawer_Open__2hRSN\",\"Close\":\"SideDrawer_Close__2llrX\",\"Logo\":\"SideDrawer_Logo__Iggkk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__35AEG\",\"Label\":\"BuildControl_Label__3thRe\",\"Less\":\"BuildControl_Less__1W9t1\",\"More\":\"BuildControl_More__11kWs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__L009i\",\"Label\":\"Input_Label__Un_mV\",\"InputElement\":\"Input_InputElement__4KXmu\",\"Invalid\":\"Input_Invalid__bnlqK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__3bi2-\",\"Logo\":\"Toolbar_Logo__24M16\",\"DesktopOnly\":\"Toolbar_DesktopOnly__35XAv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"Navigationitem_NavigationItem__Sloft\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__3FvLb\",\"OrderButton\":\"BuildControls_OrderButton__2-Hmz\",\"enable\":\"BuildControls_enable__3mejb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3cWWm\",\"Success\":\"Button_Success__1vFch\",\"Danger\":\"Button_Danger__1fq9h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__2BZtq\"};","module.exports = __webpack_public_path__ + \"static/media/original.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__2K16l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"Navigationitems_NavigationItems__204VU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__XC4eE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3X-Ez\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__1GJmS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__2Ujg8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1z2c0\",\"load2\":\"Spinner_load2__1SUnK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__3eBX5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__cQhiO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__23ziv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__17X98\"};","const auxilary =(props)=> props.children;\r\n\r\nexport default auxilary;","import React from 'react';\r\nimport burgerLogo from '../../assets/images/original.png';\r\nimport classes from './Logo.module.css';\r\nimport { checkPropTypes } from 'prop-types';\r\n\r\nconst logo =(props)=>(\r\n    <div className={classes.Logo} style={{height:props.height}}>\r\n        <img src={burgerLogo} alt='MyBurger'/>\r\n    </div>\r\n);\r\n\r\nexport default logo;","import React from 'react';\r\nimport classes from './Navigationitem.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst navigationItem=(props)=>(\r\n\r\n    <li className={classes.NavigationItem}>\r\n        <NavLink to={props.link}\r\n                    exact={props.exact}\r\n                    activeClassName={classes.active}>{props.children} </NavLink>\r\n        </li>\r\n\r\n);\r\nexport default navigationItem;","import React from 'react';\r\nimport classes from './Navigationitems.module.css';\r\nimport NavigationItem from './Navigationitem/Navigationitem';\r\n\r\nconst navigationItems=(props)=>(\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link=\"/\" exact >Burger Builder</NavigationItem>\r\n        {props.isAuthenticated ?<NavigationItem link=\"/orders\">ORDERS </NavigationItem>:null}\r\n        {!props.isAuthenticated \r\n                                ?<NavigationItem link=\"/auth\">Authenticate</NavigationItem>\r\n                                :<NavigationItem link=\"/logout\">Logout</NavigationItem>}\r\n    </ul>\r\n\r\n);\r\nexport default navigationItems;","import React from 'react';\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst drawerToggle =(props)=>\r\n(\r\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\n\r\n\r\nexport default drawerToggle;","import React from 'react';\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../Navigationitems/Navigationitems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\n\r\nconst toolbar =(props)=>(\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.drawerToggleClicked}/>\r\n        <div className={classes.Logo}>\r\n        <Logo />\r\n        </div>\r\n        <nav className={classes.DesktopOnly}>\r\n        <NavigationItems isAuthenticated={props.isAuth}/>\r\n        </nav>\r\n    </header>\r\n);\r\nexport default toolbar;","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop =(props)=>(\r\nprops.show ? <div  className={classes.Backdrop} onClick={props.clicked}></div>:null\r\n);\r\n\r\n\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../Navigationitems/Navigationitems';\r\nimport classes from './SideDrawer.module.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Auxilary from '../../../hoc/Auxilary/Auxilary';\r\nconst sideDrawer =(props)=>{\r\n    let attachedClasses=[classes.SideDrawer,classes.Close];\r\n    if(props.open)\r\n    {\r\n        attachedClasses=[classes.SideDrawer,classes.Open];\r\n    }\r\n\r\n    return(\r\n        <Auxilary>\r\n            <Backdrop show={props.open} clicked={props.closed}/>\r\n            <div className={attachedClasses.join(' ')} onClick={props.closed}>\r\n            <div className={classes.Logo}>\r\n            <Logo />\r\n            </div>\r\n            <nav>\r\n                <NavigationItems isAuthenticated={props.isAuth}/>\r\n            </nav>\r\n        </div>\r\n        </Auxilary>\r\n    );\r\n}\r\nexport default sideDrawer;","import React from 'react';\r\nimport Auxilary from '../Auxilary/Auxilary';\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Layout extends React.Component{\r\n    state={\r\n        showSideDrawer:false\r\n    }\r\n        sideDrawerClosedHandler=()=>{\r\n            this.setState({showSideDrawer:false});\r\n        }\r\n        sideDrawerToggleHandler=()=>{\r\n            this.setState((prevState)=>{\r\n                return {showSideDrawer:!prevState.showSideDrawer};\r\n            });\r\n        }\r\n    render()\r\n    {\r\n        \r\n        return(\r\n            <Auxilary>\r\n        <Toolbar isAuth={this.props.isAuthenticated} drawerToggleClicked={this.sideDrawerToggleHandler}/>\r\n        <SideDrawer isAuth={this.props.isAuthenticated} open={this.state.showSideDrawer} closed={this.sideDrawerClosedHandler}/>\r\n        <main className={classes.Content}>\r\n        {this.props.children}\r\n    </main>\r\n    </Auxilary>   \r\n\r\n        );\r\n    }\r\n}\r\n    \r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        isAuthenticated:state.auth.token !== null\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Layout);","import React from 'react';\r\nimport classes from './Burgeringredient.module.css';\r\nimport PropTypes from 'prop-types';\r\nclass Burgeringredient extends React.Component\r\n {\r\nrender()\r\n{\r\n    let ingredient=null;\r\n    switch(this.props.type)\r\n    {\r\n        case('bread-bottom'):\r\n            ingredient=<div className={classes.BreadBottom}></div>;\r\n        break;\r\n        case('bread-top'):\r\n            ingredient=(\r\n                <div className={classes.BreadTop}>\r\n                    <div className={classes.Seeds1}></div>\r\n                    <div className={classes.Seeds2}></div>\r\n                </div>\r\n            );\r\n        break;\r\n        case('meat'):\r\n            ingredient=<div className={classes.Meat}></div>;\r\n             break;\r\n        case('cheese'):\r\n            ingredient=<div className={classes.Cheese}></div>;\r\n             break;\r\n        case('salad'):\r\n            ingredient=<div className={classes.Salad}></div>;\r\n            break;\r\n        case('bacon'):\r\n            ingredient=<div className={classes.Bacon}></div>;\r\n            break;\r\n        default:\r\n            ingredient=null;\r\n\r\n    }\r\n    return ingredient;\r\n\r\n}\r\n   \r\n}\r\nBurgeringredient.propTypes={\r\n    type:PropTypes.string.isRequired\r\n};\r\n export default Burgeringredient;","import React from 'react';\r\nimport classes from './Burger.module.css';\r\nimport Burgeringredient from './Burgeringredient/Burgeringredient';\r\n\r\nconst Burger =(props)=>{\r\n    \r\n    let transformedIngredients=Object.keys(props.ingredients)\r\n                                    .map(igkey =>{\r\n                                        return [...Array(props.ingredients[igkey])].map((_,i)=>{\r\n                                          return <Burgeringredient key={igkey+i} type={igkey} />;\r\n                                        });\r\n                                    })\r\n                                    .reduce((arr,el)=>{return arr.concat(el)},[]);\r\n\r\n                                    if(transformedIngredients === 0)\r\n                                    {\r\n                                       transformedIngredients=<p>please start add ingredients</p>;\r\n                                    }\r\n\r\n                               \r\n\r\n    return(\r\n        <div className={classes.Burger}>\r\n            <Burgeringredient type=\"bread-top\" />\r\n            {/*<Burgeringredient type=\"cheese\" />\r\n            <Burgeringredient type=\"meat\" />*/}\r\n            {transformedIngredients}\r\n            <Burgeringredient type=\"bread-bottom\" />\r\n        </div>\r\n    );\r\n}\r\nexport default Burger;","import React from 'react';\r\nimport classes from './BuildControl.module.css'\r\n\r\nconst buildControl=(props)=>(\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button className={classes.Less} onClick={props.removed} disabled={props.disabled}>Less</button>\r\n        <button className={classes.More} onClick={props.added}>More</button>\r\n    </div>\r\n);\r\nexport default buildControl;","import React from 'react';\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls=[\r\n    {label:'Salad',type:'salad'},\r\n    {label:'Bacon',type:'bacon'},\r\n    {label:'Cheese',type:'cheese'},\r\n    {label:'Meat',type:'meat'},\r\n];\r\n\r\nconst buildControls =(props)=>(\r\n    <div className={classes.BuildControls}>\r\n        <p>Total Price:<strong>{props.price.toFixed(2)}</strong></p>\r\n        {controls.map(ctrl=>(\r\n            <BuildControl  \r\n            key={ctrl.label} \r\n            label={ctrl.label}\r\n            added={()=>props.ingredientAdded(ctrl.type)}\r\n            removed={()=>props.ingredientRemoved(ctrl.type)}\r\n            disabled={props.disabled[ctrl.type]}/>))}\r\n\r\n            <button className={classes.OrderButton}\r\n            disabled={!props.purchasable}\r\n            onClick={props.ordered}>{props.isAuth?'ORDER NOW':'SIGN UP TO ORDER'}</button>\r\n    </div>\r\n\r\n);\r\n\r\nexport default buildControls;","import React from 'react';\r\nimport classes from './Modal.module.css';\r\nimport Auxilary from '../../../hoc/Auxilary/Auxilary';\r\nimport Backdrop from '../Backdrop/Backdrop'\r\n\r\nclass Modal extends React.Component\r\n{\r\n    shouldComponentUpdate(nextProps,nextState)\r\n    {\r\n        return nextProps.show !== this.props.show||nextProps.children !==this.props.children;\r\n    }\r\n   \r\n\r\n    render()\r\n    {\r\nreturn(\r\n    <Auxilary >\r\n        <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\r\n    <div className={classes.Modal}\r\n        style={{transform:this.props.show ? 'translateY(0)': 'translateY(-100vh)',\r\n                opacity:this.props.show ? '1':'0'\r\n                }}>\r\n        {this.props.children}\r\n    </div>\r\n    </Auxilary>\r\n); \r\n            }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst button =(props)=>(\r\n<button disabled={props.disabled}\r\nclassName={[classes.Button, classes[props.btnType]].join(' ')}\r\nonClick={props.clicked}>{props.children}</button>\r\n);\r\n\r\nexport default button;\r\n","import React from 'react';\r\nimport Auxilary from '../../../hoc/Auxilary/Auxilary';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nclass orderSummary extends React.Component\r\n{\r\n    //this could be a function component,doesn't have to be class component\r\n   \r\n    render()\r\n    {\r\n    const ingredientsSummary=Object.keys( this.props.ingredients)\r\n                                .map(igkey=>{\r\n                                return (\r\n                                <li key={igkey}>\r\n                                    <span style={{textTransform:'capitalize'}}>{igkey}</span>:{this.props.ingredients[igkey]}\r\n                                    </li>);\r\n                                });\r\n\r\n    return(\r\n        <Auxilary>\r\n            <h3>Your Order</h3>\r\n            <p>A Delicious burger with following ingredients:</p>\r\n            <ul>{ingredientsSummary}</ul>\r\n            <p><strong>Total Price:{this.props.price.toFixed(2)}</strong></p>\r\n                <p> Continue To Checkout </p>\r\n                <Button btnType=\"Danger\" clicked={this.props.purchaseCancelled}>CANCEL</Button>\r\n                <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>CONTINUE</Button>\r\n        </Auxilary>\r\n    );\r\n    }\r\n};\r\nexport default orderSummary;","import axios from 'axios';\r\n\r\nconst instance =axios.create({\r\n    baseURL:'https://react-my-burger-6da54.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst spinner=()=>(\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default spinner;","import React, { Component } from 'react';\r\n\r\n\r\nimport Model from '../../components/UI/Modal/Modal';\r\nimport Auxilary from '../Auxilary/Auxilary';\r\n\r\nconst withErrorHandler =(WrappedComponent,axios)=>{\r\n    return class extends Component\r\n    {\r\n        state={\r\n            error:null\r\n        }\r\n        componentWillMount()\r\n        {\r\n           this.treqInterceptor=axios.interceptors.request.use(req=>{\r\n                this.setState({error:null});\r\n                return req;\r\n            })\r\n           this.resInterceptor=axios.interceptors.response.use(res=>res,error=>{\r\n                this.setState({error:error});\r\n            })\r\n        }\r\n        componentWillUnmount()\r\n        {\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        }\r\n\r\n\r\n        errorConfirmedHandler=()=>{\r\n            this.setState({error:null});\r\n        }\r\n\r\n        render()\r\n        {\r\n            return( <Auxilary>\r\n                <Model show={this.state.error}\r\n                        modalClosed={this.errorConfirmedHandler}>\r\n                {this.state.error ? this.state.error.message:null}\r\n                </Model>\r\n                <WrappedComponent {...this.props} />\r\n            </Auxilary>);\r\n        }\r\n    }\r\n        \r\n}\r\n\r\nexport default withErrorHandler;","import * as actionType from './actionTypes';\r\nimport axios from 'axios';\r\n\r\n\r\nexport const authStart=()=>{\r\n    return{\r\n        type:actionType.AUTH_START\r\n    };\r\n};\r\n\r\nexport const authSuccess=(token,userId)=>{\r\n    return{\r\n        type:actionType.AUTH_SUCCESS,\r\n        Idtoken:token,\r\n        userId:userId\r\n    };\r\n};\r\n\r\nexport const authFail=(error)=>{\r\n    return{\r\n        type:actionType.AUTH_FAIL,\r\n        error:error\r\n    }\r\n}\r\n\r\n\r\nexport const logout=()=>{\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId');\r\n    return{\r\n        type:actionType.AUTH_LOGOUT\r\n    };\r\n};\r\n\r\nexport const checkAuthTimeout=(expirationTime)=>{\r\n    return dispatch=>{\r\n\r\n        setTimeout(()=>{\r\n            dispatch(logout());\r\n        },expirationTime * 1000);\r\n    };\r\n};\r\n\r\n\r\nexport const auth =(email,password,isSignup)=>{\r\n    return dispatch=>{\r\n        dispatch(authStart());\r\n        const authData={\r\n                email:email, \r\n                password:password,\r\n                returnSecureToken:true\r\n        };\r\n        let url='https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCAh_1zEWHS4KXUUWrdIjukz7AGf7T7oPo';\r\n       if(!isSignup)\r\n       {\r\n           url='https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCAh_1zEWHS4KXUUWrdIjukz7AGf7T7oPo';\r\n       }\r\n       \r\n        axios.post(url,authData)\r\n                .then(response=>{\r\n                    const expirationDate=new Date(new Date().getTime() +response.data.expiresIn * 1000);\r\n                    localStorage.setItem('token',response.data.idToken);\r\n                    localStorage.setItem('expirationDate',expirationDate);\r\n                    localStorage.setItem('userId',response.data.userId);\r\n                    dispatch(authSuccess(response.data.idToken,response.data.localId));\r\n                    dispatch(checkAuthTimeout(response.data.expiresIn))\r\n                })\r\n                .catch(err=>{\r\n                    dispatch(authFail(err.response.data.error));\r\n                })\r\n    };\r\n};\r\n\r\nexport const setAuthRedirectPath=(path)=>{\r\n    return{\r\n            type:actionType.SET_AUTH_REDIRECT_PATH,\r\n            path:path\r\n    };\r\n};\r\n\r\n\r\nexport const authCheckState=()=>{\r\n\r\n    return dispatch=>{\r\n        const token=localStorage.getItem('token');\r\n        if(!token)\r\n        {\r\n            dispatch(logout());\r\n        }\r\n        else{\r\n            const expirationDate=new Date(localStorage.getItem('expirationDate')); \r\n            if(expirationDate <= new Date())\r\n            {\r\n                dispatch(logout());\r\n            }\r\n            else{\r\n                const userId=localStorage.getItem('userId');\r\n                dispatch(authSuccess(token,userId));\r\n                dispatch(checkAuthTimeout((expirationDate.getTime()-new Date().getTime()) /1000));\r\n            }\r\n           \r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","export const ADD_INGREDIENT='ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT='REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS='SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED='FETCH_INGREDIENTS_FAILED';\r\n\r\nexport const PURCHASE_BURGER_START='PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS='PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL='PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_INIT='PURCHASE_INIT';\r\n\r\nexport const FETCH_ORDER_START='FETCH_ORDER_START';\r\nexport const FETCH_ORDER_SUCCESS='FETCH_ORDER_SUCCESS';\r\nexport const FETCH_ORDER_FAIL='FETCH_ORDER_FAIL';\r\n\r\nexport const AUTH_START=\"AUTH_START\";\r\nexport const AUTH_SUCCESS=\"AUTH_SUCCESS\";\r\nexport const AUTH_FAIL=\"AUTH_FAIL\";\r\nexport const AUTH_LOGOUT=\"AUTH_LOGOUT\";\r\n\r\nexport const SET_AUTH_REDIRECT_PATH='SET_AUTH_REDIRECT_PATH';","import React ,{Component} from 'react';\r\nimport Auxilary from '../../hoc/Auxilary/Auxilary';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Model from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport axios from '../../axios-orders';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport{connect} from 'react-redux';\r\nimport * as actionType from '../../store/actions/actionTypes';\r\nimport * as actions from '../../store/actions/index';\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport class BurgerBuilder extends Component \r\n{\r\n    state={\r\n        purchasing:false\r\n        \r\n    }\r\n\r\n    componentDidMount()\r\n    { \r\n     \r\n    this.props.onInitIngredients();\r\n\r\n    }\r\n\r\nupdatePurchaseState(ingredients)\r\n{\r\n    \r\n    const sum=Object.keys (ingredients)\r\n                .map( igkey => {\r\n                    return ingredients[igkey];\r\n                })\r\n                .reduce((sum,el) => {\r\n                    return sum+el;},0);\r\n\r\n                 return sum > 0 ;\r\n }\r\n/*                                                  //because of reducer\r\naddIngredientHandler=(type)=>{\r\n    const oldCount=this.state.ingredients[type];\r\n    const updatedCounted=oldCount+1;\r\n    const updatedIngredients={...this.state.ingredients};\r\n    updatedIngredients[type]=updatedCounted;\r\n    const priceAddition=INGREDIENT_PRICES[type];\r\n    const oldPrice=this.state.totalPrice;\r\n    const newPrice=oldPrice+priceAddition;\r\n    this.setState({totalPrice:newPrice,ingredients:updatedIngredients});\r\n    this.updatePurchaseState(updatedIngredients);\r\n}\r\n\r\nremoveIngredientHandler=(type)=>{\r\n\r\n    const oldCount=this.state.ingredients[type];\r\n    if(oldCount<=0)\r\n    {\r\n        return;\r\n    }\r\n    const updatedCounted=oldCount-1;\r\n    const updatedIngredients={...this.state.ingredients};\r\n    updatedIngredients[type]=updatedCounted;\r\n    const priceDeduction=INGREDIENT_PRICES[type];\r\n    const oldPrice=this.state.totalPrice;\r\n    const newPrice=oldPrice-priceDeduction;\r\n    this.setState({totalPrice:newPrice,ingredients:updatedIngredients});\r\n    this.updatePurchaseState(updatedIngredients);\r\n\r\n}  */\r\n\r\n    purchaseHandler=()=>{\r\n        if(this.props.isAuthenticated)\r\n        {\r\n            this.setState({purchasing:true});\r\n        }\r\n        else\r\n        {\r\n            this.props.onSetAuthRedirectPath('/checkout');\r\n            this.props.history.push(\"/auth\")\r\n        }\r\n       \r\n    }\r\n\r\n    purchaseCancleHandler=()=>{\r\n        this.setState({purchasing:false});\r\n    }\r\n    purchaseContinueHandler=()=>{\r\n            this.props.onInitPurchased(); \r\n            this.props.history.push('/checkout');\r\n    }\r\n    render()\r\n    {\r\n        const disabledInfo={...this.props.ings};\r\n\r\n        for(let key in disabledInfo)\r\n        {\r\n            disabledInfo[key]=disabledInfo[key]<=0; \r\n        }\r\n\r\n        let orderSummary=null;\r\n        let burger=this.props.error? <p>ingredients can't be loaded</p>:<Spinner />;\r\n\r\n        if(this.props.ings)\r\n        {\r\n            burger=(\r\n                <Auxilary>\r\n                    <Burger ingredients={this.props.ings}/>\r\n                        <BuildControls \r\n                        ingredientAdded={this.props.oningredientAdd}\r\n                        ingredientRemoved={this.props.oningredientRemove}\r\n                        disabled={disabledInfo}\r\n                        purchasable={this.updatePurchaseState(this.props.ings)}\r\n                        ordered={this.purchaseHandler}\r\n                        isAuth={this.props.isAuthenticated}\r\n                        price={this.props.price}/>\r\n                 </Auxilary>\r\n                );\r\n            orderSummary=<OrderSummary ingredients={this.props.ings} \r\n                                        price={this.props.price}\r\n                                        purchaseCancelled={this.purchaseCancleHandler}\r\n                                        purchaseContinued={this.purchaseContinueHandler}/>   ;\r\n        \r\n        \r\n        }\r\n       \r\n        \r\n        return(\r\n            <Auxilary>\r\n                <Model show={this.state.purchasing}  modalClosed={this.purchaseCancleHandler}>\r\n                {orderSummary}\r\n                </Model>\r\n                {burger}\r\n            </Auxilary>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps=state=>{\r\n        return{\r\n                ings:state.burgerBuilder.ingredients,\r\n                price:state.burgerBuilder.totalPrice,\r\n                error:state.burgerBuilder.error,\r\n                isAuthenticated:state.auth.token !== null\r\n        }\r\n}\r\nconst mapDispatchToProps=dispatch=>{\r\n\r\n      return{  oningredientAdd:(ingName)=>dispatch(actions.addIngredient(ingName)),\r\n               oningredientRemove:(ingName)=>dispatch(actions.removeIngredient(ingName)),\r\n               onInitIngredients:()=>dispatch(actions.initIngredients()),\r\n               onInitPurchased:()=>dispatch(actions.purchaseInit()),\r\n               onSetAuthRedirectPath:(path)=>dispatch(actions.setAuthRedirectPath(path))\r\n\r\n\r\n            }\r\n\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(BurgerBuilder,axios));","\r\nimport * as actionType from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\n\r\nexport const addIngredient=(name)=>{\r\n\r\n    return{\r\n        type:actionType.ADD_INGREDIENT,\r\n        ingredientName:name\r\n    };\r\n\r\n};\r\n\r\nexport const removeIngredient=(name)=>{\r\n\r\n    return{\r\n        type:actionType.REMOVE_INGREDIENT,\r\n        ingredientName:name\r\n    };\r\n\r\n};\r\n\r\nexport const setIngredients=(ingredients)=>{\r\n    return{\r\n        type:actionType.SET_INGREDIENTS,\r\n        ingredients:ingredients\r\n\r\n    };\r\n};\r\n\r\nexport const fetchIngredientsFailed=()=>{\r\n    return{\r\n        type:actionType.FETCH_INGREDIENTS_FAILED\r\n    };\r\n};\r\n\r\nexport const initIngredients=()=>{\r\n    return dispatch =>{\r\n\r\n        axios.get('https://react-my-burger-6da54.firebaseio.com/ingredients.json')\r\n                  .then(response=>{\r\n                     dispatch(setIngredients(response.data));\r\n                  })\r\n                 .catch(error=>{\r\n                    dispatch(fetchIngredientsFailed());\r\n              });\r\n\r\n    };\r\n};","import * as actionType from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const purchaseBurgerSuccess=(id,orderData)=>{\r\n\r\n    return{\r\n        type:actionType.PURCHASE_BURGER_SUCCESS,\r\n        orderId:id,\r\n        orderData:orderData\r\n\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerFail=(error)=>{\r\n\r\n  return{  type:actionType.PURCHASE_BURGER_FAIL,\r\n           error:error\r\n       };\r\n};\r\n\r\n\r\nexport const purchaseBurgerStart=()=>{\r\n    return{\r\n        type:actionType.PURCHASE_BURGER_START\r\n    }\r\n}\r\n\r\n\r\nexport const purchaseBurger=(orderData,token)=>{\r\n    return dispatch =>{\r\n        dispatch(purchaseBurgerStart())\r\n        axios.post('/orders.json?auth=' + token,orderData)\r\n        .then(response=>{\r\n           dispatch(purchaseBurgerSuccess(response.data.name,orderData));\r\n        })\r\n        .catch(error=>{\r\n            dispatch(purchaseBurgerFail(error))\r\n        });\r\n\r\n    };\r\n};\r\n\r\nexport const purchaseInit=()=>{\r\n    return{\r\n        type:actionType.PURCHASE_INIT\r\n    };\r\n};\r\n\r\nexport const fetchOrderSuccess=(orders)=>{\r\n    return{\r\n        type:actionType.FETCH_ORDER_SUCCESS,\r\n        orders:orders\r\n    };\r\n};\r\n\r\nexport const fetchOrderFail=(error)=>{\r\n    return{\r\n        type:actionType.FETCH_ORDER_FAIL,\r\n        error:error\r\n    };\r\n};\r\n\r\nexport const fetchOrderStart=()=>{\r\n    return{\r\n        type:actionType.FETCH_ORDER_START\r\n    }\r\n}\r\n\r\nexport const fetchOrders=(token,userId)=>{\r\n         return dispatch=>{\r\n             dispatch(fetchOrderStart());\r\n             const queryParams='?auth='+ token + '&orderBy=\"userId\"&equalTo=\"' + userId +'\"';\r\n            axios.get('/orders.json' + queryParams)\r\n            .then(res=>{\r\n               const fetchedOrders=[];\r\n               for(let key in res.data)\r\n               {\r\n                   fetchedOrders.push({...res.data[key],id:key});\r\n               }\r\n               dispatch(fetchOrderSuccess(fetchedOrders));\r\n            })\r\n            .catch(err=>{\r\n                dispatch(fetchOrderFail(err));\r\n                      })\r\n\r\n         }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport classes from './Input.module.css';\r\n\r\nconst input=(props)=>{\r\n\r\n    let inputElement=null;\r\n    const inputClasses=[classes.InputElement];\r\n\r\n    if(props.invalid && props.shouldValidate && props.touched)\r\n    {\r\n        inputClasses.push(classes.Invalid);\r\n    }\r\n \r\n    switch(props.elementType)\r\n    {\r\n        case('input'):\r\n            inputElement=<input className={inputClasses.join(' ')} \r\n            {...props.elementConfig} value={props.value}\r\n            onChange={props.changed}/>;\r\n        \r\n            break;\r\n        case('textarea'):\r\n            inputElement=<textarea className={inputClasses.join(' ')}\r\n             {...props.elementConfig} value={props.value}\r\n             onChange={props.changed}/>;\r\n            break;\r\n        case('select'):\r\n            inputElement=<select className={inputClasses.join(' ')}\r\n              value={props.value} onChange={props.changed}>\r\n            {props.elementConfig.options.map(option=>(\r\n                    <option key={option.value} value={option.value}>\r\n                        {option.displayValue}\r\n                    </option>\r\n            ))}\r\n            \r\n\r\n             </select>;\r\n            break;\r\n        default:\r\n            inputElement=<input className={inputClasses}\r\n             {...props.elementConfig} value={props.value}\r\n             onChange={props.changed}/>;\r\n\r\n    }\r\n\r\n    return(\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default input;","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\n\r\nimport Button from '../../components/UI/Button/Button';\r\nimport classes from './ContactData.module.css';\r\nimport axios from '../../axios-orders';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport Input from '../../components/UI/Input/Input'\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\n\r\n\r\n\r\nclass ContactData extends Component\r\n{\r\n state={\r\n     orderForm:{\r\n            name:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'text',\r\n                    placeholder:'Your Name'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            village:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'text',\r\n                    placeholder:'Your Village'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            street:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'text',\r\n                    placeholder:'Street'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            zipcode:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'text',\r\n                    placeholder:'Zipcode'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true,\r\n                    minLength:5,\r\n                    maxLength:5\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            country:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'text',\r\n                    placeholder:'country'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            email:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'email',\r\n                    placeholder:'Your email'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            deliveryMethod:{\r\n                elementType:'select',\r\n                elementConfig:{\r\n                   options:[{value:'fatest',displayValue:'fatest'},\r\n                            {value:'cheapest',displayValue:'Cheapest'}]\r\n                },\r\n                value:'fatest',\r\n                validation:{},\r\n                valid:true\r\n               \r\n            },\r\n    \r\n\r\n     },\r\n     formIsValid:false,\r\n    \r\n }\r\n\r\n orderHandler=(event)=>{\r\n     event.preventDefault(); \r\n    const formData={};\r\n    for(let formElementIdentifier in this.state.orderForm)\r\n    {\r\n        formData[formElementIdentifier]=this.state.orderForm[formElementIdentifier].value;\r\n    }\r\n\r\n\r\n\r\n       const order ={\r\n           ingredients:this.props.ings,\r\n           price:this.props.price,\r\n           orderData:formData,\r\n           userId:this.props.userId\r\n       } \r\n       this.props.onOrderBurger(order,this.props.token);\r\n      \r\n }\r\n\r\n    checkValidity(value,rules)\r\n    {\r\n        let isValid=true;\r\n        if(!rules)\r\n        {\r\n            return true;\r\n        }\r\n        if(rules.required)\r\n        {\r\n            isValid=value.trim() !== '' && isValid;\r\n        }\r\n        if(rules.minLength)\r\n        {\r\n            isValid=value.length >= rules.minLength && isValid;\r\n        }\r\n        if(rules.maxLength)\r\n        {\r\n            isValid=value.length <= rules.maxLength && isValid;\r\n        }\r\n        \r\n        return isValid;\r\n    }\r\n\r\n inputChangedHandler=(event,inputIdentifier)=>{\r\n     const updatedOrderForm={\r\n         ...this.state.orderForm\r\n     }\r\n     const updatedFormElement={\r\n         ...updatedOrderForm[inputIdentifier]\r\n        };\r\n     updatedFormElement.value=event.target.value;\r\n     updatedFormElement.valid=this.checkValidity(updatedFormElement.value,updatedFormElement.validation);\r\n     updatedFormElement.touched=true;\r\n     updatedOrderForm[inputIdentifier]=updatedFormElement;\r\n\r\n        let formIsValid=true;\r\n        for(let inputIdentifier in updatedOrderForm)\r\n        {\r\n            formIsValid=updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n        }\r\n\r\n     this.setState({orderForm:updatedOrderForm,formIsValid:formIsValid});\r\n }\r\n\r\n render()\r\n {\r\n        const formElementArray=[];\r\n\r\n         for(let key in this.state.orderForm)\r\n         {\r\n             formElementArray.push({\r\n                 id:key,\r\n                 config:this.state.orderForm[key]\r\n             });\r\n         }\r\n\r\n\r\n\r\n     let form=(<form onSubmit={this.orderHandler}>\r\n        {formElementArray.map(formElement=>(\r\n            <Input key={formElement.id} elementType={formElement.config.elementType}\r\n                    elementConfig={formElement.config.elementConfig}\r\n                    value={formElement.config.value}\r\n                    invalid={!formElement.config.valid}\r\n                    shouldValidate={formElement.config.vali}\r\n                    touched={formElement.config.touched}\r\n                    changed={(event)=>this.inputChangedHandler(event,formElement.id)}/>\r\n        ))}\r\n        <Button btnType=\"Success\"  disabled={!this.state.formIsValid}>ORDER</Button>\r\n    </form>);\r\n     if(this.props.loading)\r\n     {\r\n         form=<Spinner />;\r\n     }\r\n     return(\r\n         <div className={classes.ContactData}>\r\n                <h4>Enter Your Contact Data</h4>\r\n                \r\n                {form}\r\n         </div>\r\n     )\r\n }\r\n\r\n\r\n\r\n}\r\nconst mapStateToProps=state=>{\r\n    return{\r\n        ings:state.burgerBuilder.ingredients,\r\n        price:state.burgerBuilder.totalPrice,\r\n        loading:state.order.loading,\r\n        token:state.auth.token,\r\n        userId:state.auth.userId\r\n    };\r\n    \r\n};\r\n\r\nconst mapDispatchToProps=dispatch=>{\r\n\r\n    return{\r\n              onOrderBurger:(orderData,token)=>dispatch(actions.purchaseBurger(orderData,token))  \r\n          };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(ContactData,axios));","import React from 'react';\r\n\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './CheckoutSummary.module.css';\r\n\r\n\r\nconst checkoutSummary=(props)=>{\r\n\r\n    return(\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>We hope it tastes well!</h1>\r\n            <div style={{width:'100%',margin:'auto'}}>\r\n                <Burger ingredients={props.ingredients}/>\r\n\r\n            </div>\r\n            <Button btnType=\"Danger\" clicked={props.checkoutCancelled}>CANCEL</Button>\r\n            <Button btnType=\"Success\" clicked={props.checkoutContinued}>CONTINUE</Button>\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default checkoutSummary;","import React ,{Component} from 'react';\r\nimport {Route,Redirect} from 'react-router-dom';\r\nimport ContactData from '../ContactData/ContactData';\r\nimport {connect} from 'react-redux';\r\n\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport * as actions from '../../store/actions/index';\r\n\r\n\r\n\r\n\r\nclass Checkout extends Component\r\n{\r\n    componentWillMount()\r\n    {\r\n        this.props.onInitPurchase();\r\n    }\r\n \r\n\r\n    checkoutCancelledHandler=()=>{\r\n\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinuedHandler=()=>{\r\n        this.props.history.replace('/checkout/contact-data');\r\n\r\n    }\r\n\r\n\r\nrender()\r\n{\r\n    let summary=<Redirect to='/' />;\r\n    if(this.props.ings)\r\n    {\r\n        const purchasedRedirect=this.props.purchased?<Redirect to='/'/>:null;\r\n        summary=(\r\n            <div>\r\n                {purchasedRedirect}\r\n            <CheckoutSummary ingredients={this.props.ings}\r\n            checkoutCancelled={this.checkoutCancelledHandler}\r\n            checkoutContinued={this.checkoutContinuedHandler} />\r\n\r\n            <Route path={this.props.match.path + '/contact-data'}\r\n                   component={ContactData}/>\r\n\r\n       </div> );\r\n\r\n    }\r\n    return summary;\r\n}\r\n\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n\r\n    return {\r\n        ings:state.burgerBuilder.ingredients,\r\n        purchased:state.order.purchased\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps=dispatch=>{\r\n    return{\r\n                onInitPurchase:()=>dispatch(actions.purchaseInit())\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Checkout);","import React from 'react';\r\nimport classes from './Order.module.css';\r\n\r\n\r\nconst order=(props)=>{\r\n    \r\n    const ingredients=[];\r\n    \r\n    for(let ingredientName in props.ingredients)\r\n    {\r\n        ingredients.push({\r\n            name:ingredientName,\r\n            amount:props.ingredients[ingredientName]\r\n        });\r\n    }\r\n     \r\n    const ingredientOutput=ingredients.map(ig=>{\r\n    return <span \r\n            style={{textTransform:\"capitalize\",\r\n                        display:'inline-block',\r\n                        margin:'0 8px',\r\n                         border:'1px solid #ccc' ,\r\n                         padding:'5px'  }}\r\n             key={ig.name}>{ig.name}({ig.amount})</span>\r\n    })\r\n\r\nreturn(\r\n    <div className={classes.Order}>\r\n        <p>Ingredients:{ingredientOutput}</p>\r\n        <p>Price:<strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n    </div>\r\n);\r\n    \r\n}\r\n\r\nexport default order;","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\n\r\nclass Orders extends Component\r\n{\r\n    \r\n    componentDidMount()\r\n    {\r\n       this.props.onFetchOrders(this.props.token,this.props.userId);\r\n    }\r\n  render()\r\n  {\r\n      let orders=<Spinner />;\r\n      if(this.props.loading)\r\n      {\r\n          orders=this.props.orders.map(order=>(\r\n            <Order key={order.id} \r\n               ingredients={order.ingredients}\r\n               price={order.price}/>\r\n        ));\r\n      };\r\n      return(\r\n          <div>\r\n             {orders}\r\n          </div>\r\n      )\r\n  }\r\n}\r\nconst mapStateToProps=state=>{\r\n    return{\r\n        orders:state.order.orders,\r\n        loading:state.order.loading,\r\n        token:state.auth.token,\r\n        userId:state.auth.userId\r\n    };\r\n};\r\nconst mapDispatchToProps=dispatch=>{\r\n    return{\r\n        onFetchOrders:(token,userId)=>dispatch(actions.fetchOrders(token,userId))\r\n    };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(Orders,axios));","import React ,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\n\r\n\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport classes from './Auth.module.css';\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nclass Auth extends Component\r\n{\r\n\r\n    state={\r\n        controls:{\r\n            email:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'email',\r\n                    placeholder:'Mail Address'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true,\r\n                    isEmail:true\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            password:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'password',\r\n                    placeholder:'password'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true,\r\n                    minLength:6\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            }\r\n            \r\n\r\n        },\r\n        isSignup:true\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        if(!this.props.buildingBurger && this.props.authRedirectPath !== '/')\r\n        {\r\n            this.props.onSetAuthRedirectPath();\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    checkValidity(value,rules)\r\n    {\r\n        let isValid=true;\r\n        if(!rules)\r\n        {\r\n            return true;\r\n        }\r\n        if(rules.required)\r\n        {\r\n            isValid=value.trim() !== '' && isValid;\r\n        }\r\n        if(rules.minLength)\r\n        {\r\n            isValid=value.length >= rules.minLength && isValid;\r\n        }\r\n        if(rules.maxLength)\r\n        {\r\n            isValid=value.length <= rules.maxLength && isValid;\r\n        }\r\n        \r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler=(event,controlName)=>{\r\n        const updatedControls={\r\n            ...this.state.controls,\r\n            [controlName]:{\r\n                ...this.state.controls[controlName],\r\n                value:event.target.value,\r\n                valid:this.checkValidity(event.target.value,this.state.controls[controlName].validation),\r\n                touched:true\r\n            }\r\n        };\r\n        this.setState({controls:updatedControls});\r\n\r\n    }\r\n\r\nsubmitHandler=(event)=>{\r\n    event.preventDefault();\r\n    this.props.onAuth(this.state.controls.email.value,this.state.controls.password.value,this.state.isSignup);\r\n\r\n}\r\n\r\nswitchAuthModeHandler=()=>{\r\n    this.setState(prevState=>{\r\n        return{\r\n            isSignup:!prevState.isSignup\r\n        };\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\nrender()\r\n{\r\n    const formElementArray=[];\r\n\r\n         for(let key in this.state.controls)\r\n         {\r\n             formElementArray.push({\r\n                 id:key,\r\n                 config:this.state.controls[key]\r\n             });\r\n         }\r\n    \r\n        let form = formElementArray.map(formElement=>(\r\n                 <Input key={formElement.id} elementType={formElement.config.elementType}\r\n                    elementConfig={formElement.config.elementConfig}\r\n                    value={formElement.config.value}\r\n                    invalid={!formElement.config.valid}\r\n                    shouldValidate={formElement.config.vali}\r\n                    touched={formElement.config.touched}\r\n                    changed={(event)=>this.inputChangedHandler(event,formElement.id)}/>));\r\n        \r\n      if(this.props.loading)\r\n        {\r\n            form=<Spinner />\r\n        }\r\n\r\n        let errorMessage=null;\r\n\r\n        if(this.props.error)\r\n        {\r\n        errorMessage=<p>{this.props.error.message}</p>;\r\n        }\r\n\r\n\r\n        let authRedirect=null;\r\n        if(this.props.isAuthenticated)\r\n        {\r\n            authRedirect=<Redirect to={this.props.authRedirectPath}/>;\r\n        }\r\n\r\n    return(\r\n        <div className={classes.Auth}>\r\n            {authRedirect}\r\n            {errorMessage}\r\n            <form onSubmit={this.submitHandler}>\r\n                {form}\r\n                <Button btnType=\"Success\">SUBMIT</Button>\r\n            </form>\r\n                <Button  clicked={this.switchAuthModeHandler}\r\n                btnType=\"Danger\">SWITCH TO {this.state.isSignup?'SIGN IN':'SIGN UP'}</Button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n}\r\n\r\nconst mapStateToProps=state=>{\r\n    return{\r\n        auth:state.auth.loading,\r\n        error:state.auth.error,\r\n        isAuthenticated:state.auth.token !== null,\r\n        buildingBurger:state.burgerBuilder.building,\r\n        authRedirectPath:state.auth.authRedirectPath\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps=dispatch=>{\r\n   return{\r\n        onAuth:(email,password,isSignup)=>dispatch(actions.auth(email,password,isSignup)),\r\n        onSetAuthRedirectPath:()=>dispatch(actions.setAuthRedirectPath('/'))\r\n   }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Auth);","import React,{Component} from 'react';\r\nimport * as actions from '../../../store/actions/index';\r\nimport {connect} from 'react-redux';\r\nimport{Redirect, Link} from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nclass Logout extends Component\r\n{\r\n\r\ncomponentDidMount()\r\n{\r\n    this.props.onLogout();\r\n}\r\n\r\n    render()\r\n    {\r\n        return(\r\n              <Redirect to=\"/\" />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps=dispatch=>{\r\n    return{\r\n        onLogout:()=>dispatch(actions.logout())\r\n    }\r\n}\r\n\r\n\r\nexport default connect(null,mapDispatchToProps)(Logout);","import React from 'react';\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\nimport Auth from './containers/Auth/Auth';\n\nimport {connect} from 'react-redux';\nimport {Route,Switch,withRouter,Redirect} from 'react-router-dom';\nimport Logout from './containers/Auth/Logout/Logout';\nimport * as actions from './store/actions/index';\n\nclass App extends React.Component\n {\n\n  componentDidMount()\n  {\n    this.props.onTryAutoSignup();\n  }\n\n\n   render()\n   {\n      let rotues=(\n        <Switch>\n        <Route path=\"/auth\" component={Auth}/>\n        <Route path=\"/\" exact component={BurgerBuilder}/>\n        <Redirect to=\"/\" />\n        </Switch>\n      );\n\n      if(this.props.isAuthenticated)\n      {\n        rotues=(\n          <Switch>\n          <Route path=\"/checkout\" component={Checkout}/>\n          <Route path=\"/orders\" component={Orders}/>\n          <Route path=\"/logout\" component={Logout}/>\n          <Route path=\"/auth\" component={Auth}/>\n          <Route path=\"/\" exact component={BurgerBuilder}/>\n          <Redirect to=\"/\" />\n         \n          </Switch>\n        );\n      }\n\n\n\n    return(\n      <div>\n        <Layout>\n          {rotues}\n        </Layout>\n      </div>\n    );\n   }\n \n}\n\nconst mapStateToProps=state=>{\n\n  return{\n    isAuthenticated:state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps=dispatch=>{\n   return{\n          onTryAutoSignup:()=>dispatch(actions.authCheckState())\n   }\n}\n\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionType from '../actions/actionTypes';\r\n\r\nconst initialState={\r\n    ingredients:null,\r\n    totalPrice:4,\r\n    error:false,\r\n    building:false\r\n    \r\n}\r\n\r\nconst INGREDIENT_PRICES={\r\n    salad:0.5,\r\n    cheese:0.4,\r\n    bacon:1.3,\r\n    meat:0.7\r\n}\r\n\r\nconst reducer=(state=initialState,action)=>{\r\n\r\n    switch(action.type)\r\n    {\r\n        case actionType.ADD_INGREDIENT:\r\n            return{\r\n                ...state,\r\n                ingredients:{\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]:state.ingredients[action.ingredientName]+1\r\n                },\r\n                totalPrice:state.totalPrice+INGREDIENT_PRICES[action.ingredientName],\r\n                building:true\r\n\r\n            };\r\n\r\n        case actionType.REMOVE_INGREDIENT:\r\n            return{\r\n                ...state,\r\n                ingredients:{\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]:state.ingredients[action.ingredientName]-1\r\n                },\r\n                totalPrice:state.totalPrice-INGREDIENT_PRICES[action.ingredientName],\r\n                building:true\r\n\r\n            };\r\n\r\n        case actionType.SET_INGREDIENTS:\r\n            return{\r\n                ...state,\r\n                ingredients:{\r\n                    salad:action.ingredients.salad,\r\n                    bacon:action.ingredients.bacon,\r\n                    cheese:action.ingredients.cheese,\r\n                    meat:action.ingredients.meat\r\n                },\r\n                totalPrice:4,\r\n                error:false,\r\n                building:false\r\n            };\r\n\r\n        case actionType.FETCH_INGREDIENTS_FAILED:\r\n                return{\r\n                    ...state,\r\n                    erroe:true\r\n                    \r\n                }\r\n\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default reducer;","import * as actionType from '../actions/actionTypes';\r\n\r\n\r\n\r\nconst initialState={\r\n\r\n            orders:[],\r\n            loading:false,\r\n            purchased:false\r\n}\r\n\r\nconst reducer=(state=initialState,action)=>{\r\n\r\n    switch(action.type)\r\n    {\r\n\r\n        case actionType.PURCHASE_INIT:\r\n            return{\r\n                ...state,\r\n                purchased:false\r\n            }\r\n\r\n        case actionType.PURCHASE_BURGER_START:\r\n            return{\r\n                ...state,\r\n                loading:true\r\n            };\r\n        case actionType.PURCHASE_BURGER_SUCCESS :\r\n            const newOrder={\r\n                ...action.orderData,\r\n                id:action.orderId,\r\n               \r\n            }\r\n            return{\r\n                ...state,\r\n                loading:false,\r\n                purchased:true,\r\n                orders:state.orders.concat(newOrder)\r\n\r\n            };\r\n        case actionType.PURCHASE_BURGER_FAIL:\r\n            return{\r\n                ...state,\r\n                loading:false\r\n\r\n            };\r\n\r\n            case actionType.FETCH_ORDER_START:\r\n                return{\r\n                  ...state,\r\n                  loading:true  \r\n                };\r\n\r\n        case actionType.FETCH_ORDER_SUCCESS:\r\n            return{\r\n                ...state,\r\n                orders:action.orders,\r\n                loading:false\r\n\r\n            };\r\n\r\n        case actionType.FETCH_ORDER_FAIL:\r\n            return{\r\n                ...state,\r\n                loading:false\r\n            };\r\n\r\n        \r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\n\r\nconst initialState={\r\n    token:null,\r\n    userId:null,\r\n    error:null,\r\n    loading:false,\r\n    authRedirectPath:'/'\r\n}\r\n\r\nconst reducer=(state=initialState,action)=>{\r\n\r\n    switch(action.type)\r\n    {\r\n        case actionTypes.AUTH_START:\r\n            return{\r\n                ...state,\r\n                error:false,\r\n                loading:true\r\n            };\r\n        case actionTypes.AUTH_SUCCESS:\r\n            return{\r\n                ...state,\r\n                token:action.idToken,\r\n                userId:action.userId,\r\n                error:null,\r\n                loading:false\r\n            };\r\n\r\n        case actionTypes.AUTH_FAIL:\r\n            return{\r\n                ...state,\r\n                error:action.error,\r\n                loading:false\r\n            };\r\n        case actionTypes.AUTH_LOGOUT:\r\n            return{\r\n                ...state,\r\n                token:null,\r\n                userId:null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n};\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider } from 'react-redux';\nimport {createStore,applyMiddleware,compose,combineReducers} from 'redux';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\nimport thunk from 'redux-thunk';\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer=combineReducers({\n   burgerBuilder:burgerBuilderReducer,\n   order:orderReducer,\n   auth:authReducer\n})\n\nconst store=createStore(rootReducer,composeEnhancers(applyMiddleware(thunk)));\n\n\n\nReactDOM.render(\n                 <Provider store={store}>\n                    <BrowserRouter>\n                    <App />\n                    </BrowserRouter>\n                 </Provider>,\n    \n                    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}